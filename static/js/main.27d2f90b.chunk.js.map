{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Notification/Notification.js","components/Spinner/Spinner.js","components/Button/Button.js","components/Modal/Modal.js","services/imagesApi.js","components/App.js","index.js"],"names":["Searchbar","state","inputValue","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","reset","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","id","webformatURL","largeImageURL","tags","onClick","src","alt","ImageGallery","images","map","key","Notification","message","Spinner","color","height","width","Button","Modal","handleKeyDown","code","onClose","handleOverlayClick","currentTarget","window","addEventListener","removeEventListener","children","API_KEY","URL","searchQuery","page","axios","get","then","response","data","hits","App","loading","error","fetchImages","imagesApi","prevState","catch","finally","scrollTo","top","document","documentElement","scrollHeight","behavior","handleSearchFormSubmit","query","showModal","imageScr","closeModal","prevProps","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.27d2f90b.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import './Searchbar.css';\n\nexport default class Searchbar extends Component {\n  state = { inputValue: '' };\n\n  handleChange = e => {\n    this.setState({ inputValue: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.inputValue);\n    this.reset();\n    //   OR use just\n    //this.setState({ inputValue: '' });\n  };\n\n  reset = () => {\n    this.setState({ inputValue: '' });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={this.state.inputValue}\n            onChange={this.handleChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// import './ImageGalleryItem.css';\n\nexport default function ImageGalleryItem({\n  id,\n  webformatURL,\n  largeImageURL,\n  tags,\n  onClick,\n}) {\n  return (\n    <li\n      id={id}\n      className=\"ImageGalleryItem\"\n      onClick={() => onClick(largeImageURL)}\n    >\n      <img src={webformatURL} alt={tags} className=\"ImageGalleryItem-image\" />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  webformatURL: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport PropTypes from 'prop-types';\n// import './ImageGallery.css';\n\nexport default function ImageGallery({ images, onClick }) {\n  return (\n    <ul className=\"ImageGallery\">\n      {images.map(({ id, webformatURL, largeImageURL, tags }) => (\n        <ImageGalleryItem\n          key={id}\n          id={id}\n          webformatURL={webformatURL}\n          largeImageURL={largeImageURL}\n          tags={tags}\n          onClick={onClick}\n        />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(Object).isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import React from 'react';\n\nexport default function Notification(message) {\n  return <div>{message}</div>;\n}\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport default function Spinner() {\n  return (\n    <Loader\n      className=\"Spinner\"\n      type=\"TailSpin\"\n      color=\"#3f51b5\"\n      height={50}\n      width={50}\n    />\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// import './Button.css';\n\nexport default function Button({ onClick }) {\n  return (\n    <button className=\"Button\" type=\"button\" onClick={onClick}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\n// import './Modal.css';\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleOverlayClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"Overlay\" onClick={this.handleOverlayClick}>\n        <div className=\"Modal\">{this.props.children}</div>\n      </div>\n    );\n  }\n}\n","import axios from 'axios';\n\nconst API_KEY = '18089918-e9040aca5726c1bb4261da717';\nconst URL = 'https://pixabay.com/api/';\n\nconst fetchImagesWithQuery = (searchQuery, page = 1) => {\n  return axios\n    .get(\n      `${URL}?q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n    )\n    .then(response => response.data.hits);\n};\n\nexport default {\n  fetchImagesWithQuery,\n};\n","import React, { Component } from 'react';\nimport Searchbar from './Searchbar';\nimport ImageGallery from './ImageGallery';\nimport Notification from './Notification';\nimport Spinner from './Spinner';\nimport Button from './Button';\nimport Modal from './Modal';\nimport imagesApi from '../services/imagesApi';\n\nexport default class App extends Component {\n  state = {\n    images: [],\n    searchQuery: '',\n    page: 1,\n    loading: false,\n    error: null,\n    largeImageURL: '',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.searchQuery;\n    const nextQuery = this.state.searchQuery;\n\n    if (prevQuery !== nextQuery) {\n      this.fetchImages();\n    }\n  }\n\n  fetchImages = () => {\n    const { searchQuery, page } = this.state;\n\n    this.setState({ loading: true });\n\n    imagesApi\n      .fetchImagesWithQuery(searchQuery, page)\n      .then(images =>\n        this.setState(prevState => ({\n          images: [...prevState.images, ...images],\n          page: prevState.page + 1,\n        })),\n      )\n      .catch(error => this.setState({ error }))\n      .finally(() => {\n        this.setState({ loading: false });\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      });\n  };\n\n  handleSearchFormSubmit = query => {\n    this.setState({\n      searchQuery: query,\n      page: 1,\n      images: [],\n    });\n  };\n\n  showModal = imageScr => {\n    this.setState({ largeImageURL: imageScr });\n  };\n\n  closeModal = () => {\n    this.setState({ largeImageURL: '' });\n  };\n\n  render() {\n    const { images, error, loading, largeImageURL } = this.state;\n    return (\n      <>\n        <div className=\"App\">\n          <Searchbar onSubmit={this.handleSearchFormSubmit} />\n\n          {error && (\n            <Notification\n              message={`Oops, something went wrong: ${error.message}`}\n            />\n          )}\n\n          {images.length > 0 && (\n            <ImageGallery images={images} onClick={this.showModal} />\n          )}\n          {loading && <Spinner />}\n\n          {images.length > 0 && !loading && (\n            <Button onClick={this.fetchImages} />\n          )}\n        </div>\n\n        {largeImageURL.length > 0 && (\n          <Modal onClose={this.closeModal}>\n            <img src={largeImageURL} alt=\"\" />\n          </Modal>\n        )}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'modern-normalize/modern-normalize.css';\nimport './main.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}